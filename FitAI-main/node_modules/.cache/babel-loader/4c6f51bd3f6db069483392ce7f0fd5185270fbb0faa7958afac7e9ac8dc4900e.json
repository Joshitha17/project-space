{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91924\\\\OneDrive\\\\Desktop\\\\FitAI-main\\\\FitAI-main\\\\src\\\\pages\\\\CurrentDietPlan.js\",\n  _s = $RefreshSig$();\n// src/pages/CurrentDietPlan.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Import AuthContext\nimport { generateNewDietPlan, getDietPlanHistory } from '../api/backendApi'; // Assuming these API calls exist\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentDietPlan = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated,\n    isLoading\n  } = useContext(AuthContext);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [plansGeneratedThisMonth, setPlansGeneratedThisMonth] = useState(0); // Placeholder for free tier limit\n\n  useEffect(() => {\n    // In a real application, you'd fetch the user's current plan and generated count from backend\n    // For now, we'll simulate.\n    if (!isLoading && isAuthenticated && user) {\n      // Simulate fetching a saved plan or showing a default message\n      // and fetching plans generated this month from the backend\n      // setDietPlan(...);\n      // setPlansGeneratedThisMonth(user.plansGeneratedThisMonth || 0); // Assuming backend sends this\n      console.log('User tier:', user.tier);\n\n      // --- Mock data for current plan on load ---\n      if (!dietPlan) {\n        // Only set if no plan is currently displayed\n        setDietPlan(`Your AI-Generated Diet Plan (Sample):\n\nBreakfast: Greek Yogurt with Berries and Honey (300 kcal)\nLunch: Large Salad with Grilled Chicken, Avocado, and Lemon Vinaigrette (450 kcal)\nSnack: Apple Slices with Almond Butter (150 kcal)\nDinner: Baked Salmon with Quinoa and Roasted Asparagus (550 kcal)\n\nTotal Calories: ~1450 kcal\n\nNotes: Stay hydrated! Drink at least 8 glasses of water daily.\nThis is a sample plan. Your actual plan will be customized.`);\n      }\n      // --- End Mock Data ---\n    }\n  }, [isLoading, isAuthenticated, user, dietPlan]);\n  const handleGeneratePlan = async () => {\n    setError('');\n\n    // Frontend check for free tier limit\n    if (user.tier === 'free' && plansGeneratedThisMonth >= 15) {\n      setError('You have reached your limit of 15 diet plans for this month. Upgrade to Premium for unlimited plans!');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Assuming generateNewDietPlan takes user preferences and returns a plan\n      // You would send user preferences/goals to your backend API here\n      // const response = await generateNewDietPlan({ userId: user.id, preferences: '...' }); \n\n      // --- Mock data for generation ---\n      const newPlan = `Newly Generated Plan (on ${new Date().toLocaleDateString()}):\n\nBreakfast: Oatmeal with Chia Seeds and Banana (320 kcal)\nLunch: Turkey & Veggie Wrap on Whole Wheat Tortilla (400 kcal)\nSnack: Handful of Walnuts (180 kcal)\nDinner: Lentil Soup with a side of Whole-Grain Bread (480 kcal)\n\nTotal Calories: ~1380 kcal\n\nNotes: Remember to incorporate light exercise.`;\n      const response = {\n        success: true,\n        plan: newPlan\n      };\n      // --- End Mock Data ---\n\n      if (response.success) {\n        setDietPlan(response.plan);\n        // Increment generated plans for free tier (frontend simulation)\n        if (user.tier === 'free') {\n          setPlansGeneratedThisMonth(prev => prev + 1);\n        }\n        alert('New diet plan generated!');\n      } else {\n        setError(response.message || 'Failed to generate diet plan.');\n      }\n    } catch (err) {\n      console.error('Error generating diet plan:', err);\n      setError('An error occurred while generating your diet plan.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadPdf = () => {\n    if (user.tier !== 'premium') {\n      alert('PDF download is a Premium feature. Please upgrade your plan!');\n      return;\n    }\n    // Simulate PDF download\n    alert('Downloading diet plan as PDF (functionality to be integrated with backend)!');\n    // In a real application, you would make an API call to get the PDF\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-20\",\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen pt-20 flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-8 bg-white rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-gray-800 mb-4\",\n          children: \"Access Denied\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            className: \"text-purple-600 hover:underline\",\n            children: \"sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 52\n          }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"text-purple-600 hover:underline\",\n            children: \"sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 133\n          }, this), \" to view your diet plan.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/pricing\",\n          className: \"btn-primary\",\n          children: \"View Pricing Plans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  const isFreeTier = user.tier === 'free';\n  const canGenerateMorePlans = !isFreeTier || plansGeneratedThisMonth < 15;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen pt-20 pb-12 bg-gradient-to-br from-purple-50 via-blue-50 to-green-50 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto bg-white p-8 rounded-2xl shadow-xl border border-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-gray-900 text-center mb-8\",\n        children: \"Your Current Diet Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative mb-6 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), dietPlan ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border-l-4 border-blue-400 text-blue-800 p-4 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-lg mb-2\",\n            children: \"Generated Plan Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 whitespace-pre-wrap\",\n            children: dietPlan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col sm:flex-row gap-4 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGeneratePlan,\n            disabled: loading || !canGenerateMorePlans,\n            className: `btn-primary ${loading ? 'opacity-50 cursor-not-allowed' : ''} ${!canGenerateMorePlans ? 'opacity-50 cursor-not-allowed' : ''}`,\n            children: loading ? 'Generating...' : 'Generate New Plan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownloadPdf,\n            disabled: user.tier !== 'premium',\n            className: `btn-secondary ${user.tier !== 'premium' ? 'opacity-50 cursor-not-allowed' : ''}`,\n            children: \"Download as PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-600 mb-6\",\n          children: \"You don't have a diet plan generated yet. Let AI create one for you!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), isFreeTier && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-md text-purple-600 mb-4\",\n          children: [\"(Free Tier: \", plansGeneratedThisMonth, \" of 15 plans generated this month)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGeneratePlan,\n          disabled: loading || !canGenerateMorePlans,\n          className: `btn-primary ${loading ? 'opacity-50 cursor-not-allowed' : ''} ${!canGenerateMorePlans ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: loading ? 'Generating...' : 'Generate My First Plan'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), !canGenerateMorePlans && isFreeTier && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-red-600 font-medium\",\n          children: [\"You've reached your monthly limit. \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/pricing\",\n            className: \"underline hover:text-red-800\",\n            children: \"Upgrade to Premium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 52\n          }, this), \" for unlimited plans!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/diet-plan-history\",\n          className: \"text-purple-600 hover:underline text-lg\",\n          children: \"View Previous Plans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentDietPlan, \"Lh8qfmkoDBQ0F+zaYzd9wS65x0g=\");\n_c = CurrentDietPlan;\nexport default CurrentDietPlan;\nvar _c;\n$RefreshReg$(_c, \"CurrentDietPlan\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","generateNewDietPlan","getDietPlanHistory","Link","jsxDEV","_jsxDEV","CurrentDietPlan","_s","user","isAuthenticated","isLoading","dietPlan","setDietPlan","loading","setLoading","error","setError","plansGeneratedThisMonth","setPlansGeneratedThisMonth","console","log","tier","handleGeneratePlan","newPlan","Date","toLocaleDateString","response","success","plan","prev","alert","message","err","handleDownloadPdf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","isFreeTier","canGenerateMorePlans","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/91924/OneDrive/Desktop/FitAI-main/FitAI-main/src/pages/CurrentDietPlan.js"],"sourcesContent":["// src/pages/CurrentDietPlan.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Import AuthContext\nimport { generateNewDietPlan, getDietPlanHistory } from '../api/backendApi'; // Assuming these API calls exist\nimport { Link } from 'react-router-dom';\n\nconst CurrentDietPlan = () => {\n  const { user, isAuthenticated, isLoading } = useContext(AuthContext);\n  const [dietPlan, setDietPlan] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [plansGeneratedThisMonth, setPlansGeneratedThisMonth] = useState(0); // Placeholder for free tier limit\n\n  useEffect(() => {\n    // In a real application, you'd fetch the user's current plan and generated count from backend\n    // For now, we'll simulate.\n    if (!isLoading && isAuthenticated && user) {\n      // Simulate fetching a saved plan or showing a default message\n      // and fetching plans generated this month from the backend\n      // setDietPlan(...);\n      // setPlansGeneratedThisMonth(user.plansGeneratedThisMonth || 0); // Assuming backend sends this\n      console.log('User tier:', user.tier);\n\n      // --- Mock data for current plan on load ---\n      if (!dietPlan) { // Only set if no plan is currently displayed\n        setDietPlan(`Your AI-Generated Diet Plan (Sample):\n\nBreakfast: Greek Yogurt with Berries and Honey (300 kcal)\nLunch: Large Salad with Grilled Chicken, Avocado, and Lemon Vinaigrette (450 kcal)\nSnack: Apple Slices with Almond Butter (150 kcal)\nDinner: Baked Salmon with Quinoa and Roasted Asparagus (550 kcal)\n\nTotal Calories: ~1450 kcal\n\nNotes: Stay hydrated! Drink at least 8 glasses of water daily.\nThis is a sample plan. Your actual plan will be customized.`);\n      }\n      // --- End Mock Data ---\n    }\n  }, [isLoading, isAuthenticated, user, dietPlan]);\n\n  const handleGeneratePlan = async () => {\n    setError('');\n    \n    // Frontend check for free tier limit\n    if (user.tier === 'free' && plansGeneratedThisMonth >= 15) {\n      setError('You have reached your limit of 15 diet plans for this month. Upgrade to Premium for unlimited plans!');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Assuming generateNewDietPlan takes user preferences and returns a plan\n      // You would send user preferences/goals to your backend API here\n      // const response = await generateNewDietPlan({ userId: user.id, preferences: '...' }); \n      \n      // --- Mock data for generation ---\n      const newPlan = `Newly Generated Plan (on ${new Date().toLocaleDateString()}):\n\nBreakfast: Oatmeal with Chia Seeds and Banana (320 kcal)\nLunch: Turkey & Veggie Wrap on Whole Wheat Tortilla (400 kcal)\nSnack: Handful of Walnuts (180 kcal)\nDinner: Lentil Soup with a side of Whole-Grain Bread (480 kcal)\n\nTotal Calories: ~1380 kcal\n\nNotes: Remember to incorporate light exercise.`;\n\n      const response = { success: true, plan: newPlan };\n      // --- End Mock Data ---\n\n\n      if (response.success) {\n        setDietPlan(response.plan);\n        // Increment generated plans for free tier (frontend simulation)\n        if (user.tier === 'free') {\n          setPlansGeneratedThisMonth(prev => prev + 1);\n        }\n        alert('New diet plan generated!');\n      } else {\n        setError(response.message || 'Failed to generate diet plan.');\n      }\n    } catch (err) {\n      console.error('Error generating diet plan:', err);\n      setError('An error occurred while generating your diet plan.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDownloadPdf = () => {\n    if (user.tier !== 'premium') {\n      alert('PDF download is a Premium feature. Please upgrade your plan!');\n      return;\n    }\n    // Simulate PDF download\n    alert('Downloading diet plan as PDF (functionality to be integrated with backend)!');\n    // In a real application, you would make an API call to get the PDF\n  };\n\n  if (isLoading) {\n    return <div className=\"text-center py-20\">Loading user data...</div>;\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen pt-20 flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center p-8 bg-white rounded-lg shadow-lg\">\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">Access Denied</h2>\n          <p className=\"text-gray-600 mb-6\">Please <Link to=\"/signin\" className=\"text-purple-600 hover:underline\">sign in</Link> or <Link to=\"/signup\" className=\"text-purple-600 hover:underline\">sign up</Link> to view your diet plan.</p>\n          <Link to=\"/pricing\" className=\"btn-primary\">View Pricing Plans</Link>\n        </div>\n      </div>\n    );\n  }\n\n  const isFreeTier = user.tier === 'free';\n  const canGenerateMorePlans = !isFreeTier || plansGeneratedThisMonth < 15;\n\n  return (\n    <div className=\"min-h-screen pt-20 pb-12 bg-gradient-to-br from-purple-50 via-blue-50 to-green-50 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-4xl mx-auto bg-white p-8 rounded-2xl shadow-xl border border-gray-100\">\n        <h1 className=\"text-4xl font-extrabold text-gray-900 text-center mb-8\">\n          Your Current Diet Plan\n        </h1>\n\n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg relative mb-6 text-sm\">\n            {error}\n          </div>\n        )}\n\n        {dietPlan ? (\n          <div className=\"space-y-6\">\n            <div className=\"bg-blue-50 border-l-4 border-blue-400 text-blue-800 p-4 rounded-lg\">\n              <h3 className=\"font-bold text-lg mb-2\">Generated Plan Details:</h3>\n              <p className=\"text-gray-700 whitespace-pre-wrap\">{dietPlan}</p>\n            </div>\n            \n            {/* Action buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <button\n                onClick={handleGeneratePlan}\n                disabled={loading || !canGenerateMorePlans}\n                className={`btn-primary ${loading ? 'opacity-50 cursor-not-allowed' : ''} ${!canGenerateMorePlans ? 'opacity-50 cursor-not-allowed' : ''}`}\n              >\n                {loading ? 'Generating...' : 'Generate New Plan'}\n              </button>\n              <button\n                onClick={handleDownloadPdf}\n                disabled={user.tier !== 'premium'}\n                className={`btn-secondary ${user.tier !== 'premium' ? 'opacity-50 cursor-not-allowed' : ''}`}\n              >\n                Download as PDF\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-center py-10\">\n            <p className=\"text-lg text-gray-600 mb-6\">\n              You don't have a diet plan generated yet. Let AI create one for you!\n            </p>\n            {isFreeTier && (\n              <p className=\"text-md text-purple-600 mb-4\">\n                (Free Tier: {plansGeneratedThisMonth} of 15 plans generated this month)\n              </p>\n            )}\n            <button\n              onClick={handleGeneratePlan}\n              disabled={loading || !canGenerateMorePlans}\n              className={`btn-primary ${loading ? 'opacity-50 cursor-not-allowed' : ''} ${!canGenerateMorePlans ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              {loading ? 'Generating...' : 'Generate My First Plan'}\n            </button>\n            {!canGenerateMorePlans && isFreeTier && (\n              <p className=\"mt-4 text-red-600 font-medium\">\n                You've reached your monthly limit. <Link to=\"/pricing\" className=\"underline hover:text-red-800\">Upgrade to Premium</Link> for unlimited plans!\n              </p>\n            )}\n          </div>\n        )}\n\n        {/* Link to history */}\n        <div className=\"mt-8 text-center\">\n          <Link to=\"/diet-plan-history\" className=\"text-purple-600 hover:underline text-lg\">\n            View Previous Plans\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentDietPlan;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}