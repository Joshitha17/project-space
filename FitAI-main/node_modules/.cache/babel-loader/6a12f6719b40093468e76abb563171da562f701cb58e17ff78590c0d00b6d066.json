{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91924\\\\OneDrive\\\\Desktop\\\\FitAI-main\\\\FitAI-main\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); // Stores user data like { id, email, firstName, tier }\n  const [isLoading, setIsLoading] = useState(true); // To handle initial auth check\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Simulate checking for a token in localStorage\n    const token = localStorage.getItem('authToken');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setIsAuthenticated(true);\n        setUser(userData);\n      } catch (e) {\n        console.error(\"Failed to parse user data from localStorage:\", e);\n        // Clear invalid data\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    }\n    setIsLoading(false); // Authentication check is complete\n  }, []);\n  const login = (userData, token) => {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n    navigate('/signin'); // Redirect to sign-in page after logout\n  };\n\n  // Function to update user data (e.g., after a tier upgrade)\n  const updateUser = newUserData => {\n    localStorage.setItem('user', JSON.stringify(newUserData));\n    setUser(newUserData);\n  };\n  const authContextValue = {\n    isAuthenticated,\n    user,\n    isLoading,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"xQGYuACOrswPwo3KRn8kustIDRs=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","isLoading","setIsLoading","navigate","token","localStorage","getItem","storedUser","userData","JSON","parse","e","console","error","removeItem","login","setItem","stringify","logout","updateUser","newUserData","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91924/OneDrive/Desktop/FitAI-main/FitAI-main/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); // Stores user data like { id, email, firstName, tier }\n  const [isLoading, setIsLoading] = useState(true); // To handle initial auth check\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Simulate checking for a token in localStorage\n    const token = localStorage.getItem('authToken');\n    const storedUser = localStorage.getItem('user');\n\n    if (token && storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setIsAuthenticated(true);\n        setUser(userData);\n      } catch (e) {\n        console.error(\"Failed to parse user data from localStorage:\", e);\n        // Clear invalid data\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setUser(null);\n      }\n    }\n    setIsLoading(false); // Authentication check is complete\n  }, []);\n\n  const login = (userData, token) => {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n    navigate('/signin'); // Redirect to sign-in page after logout\n  };\n\n  // Function to update user data (e.g., after a tier upgrade)\n  const updateUser = (newUserData) => {\n    localStorage.setItem('user', JSON.stringify(newUserData));\n    setUser(newUserData);\n  };\n\n  const authContextValue = {\n    isAuthenticated,\n    user,\n    isLoading,\n    login,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}